services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    ports:
      - "5434:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${{ secrets.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5053:80"
    depends_on:
      - postgres

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: ${{ secrets.AIRFLOW__CORE__EXECUTOR }}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${{ secrets.AIRFLOW__CORE__SQL_ALCHEMY_CONN }}
      AIRFLOW__WEBSERVER__SECRET_KEY:  ${{ secrets.AIRFLOW__WEBSERVER__SECRET_KEY }}
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__WEBSERVER__ENABLE_HEALTH_CHECK: 'true'
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      VECTOR_STORE_ID: ${{ secrets.VECTOR_STORE_ID }}
      COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      BASE_URL: ${{ secrets.BASE_URL }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: bash -c "airflow db init &&
                     airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.com &&
                     airflow webserver"
    healthcheck:
      test: ["CMD", "curl",  "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1m

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR:  ${{ secrets.AIRFLOW__CORE__EXECUTOR }}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN:  ${{ secrets.AIRFLOW__CORE__SQL_ALCHEMY_CONN }}
      AIRFLOW__WEBSERVER__SECRET_KEY:  ${{ secrets.AIRFLOW__WEBSERVER__SECRET_KEY }}
      AIRFLOW__CORE__FERNET_KEY: ''
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: airflow scheduler

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http"
      - "--domain=${{ secrets.NGROK_DOMAIN }}"
      - "webserver:8080"
    environment:
      - NGROK_AUTHTOKEN= ${{ secrets.NGROK_AUTHTOKEN }}
    depends_on:
      - webserver
      - scheduler
    ports:
      - "4044:4040"

volumes:
  pgadmin_data:
  